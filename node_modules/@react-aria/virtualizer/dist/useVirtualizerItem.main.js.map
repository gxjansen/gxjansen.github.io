{"mappings":";;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;AAiBM,SAAS,0CAAmB,OAA+B;IAChE,IAAI,cAAC,UAAU,eAAE,WAAW,OAAE,GAAG,EAAC,GAAG;IAErC,IAAI,aAAa,CAAA,GAAA,wBAAU,EAAE;QAC3B,IAAI,OAAO,8BAAQ,IAAI,OAAO;QAC9B,YAAY,cAAc,CAAC,WAAW,GAAG,EAAE;IAC7C,GAAG;QAAC;QAAa,WAAW,GAAG;QAAE;KAAI;IAErC,CAAA,GAAA,qCAAc,EAAE;QACd,IAAI,WAAW,aAAa,EAC1B;IAEJ;IAEA,OAAO;oBAAC;IAAU;AACpB;AAEA,SAAS,8BAAQ,IAAiB;IAChC,6DAA6D;IAC7D,IAAI,SAAS,KAAK,KAAK,CAAC,MAAM;IAC9B,KAAK,KAAK,CAAC,MAAM,GAAG;IACpB,IAAI,OAAO,IAAI,CAAA,GAAA,mCAAG,EAAE,KAAK,WAAW,EAAE,KAAK,YAAY;IACvD,KAAK,KAAK,CAAC,MAAM,GAAG;IACpB,OAAO;AACT","sources":["packages/@react-aria/virtualizer/src/useVirtualizerItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {LayoutInfo, Size} from '@react-stately/virtualizer';\nimport {RefObject, useCallback} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface IVirtualizer {\n  updateItemSize(key: Key, size: Size): void\n}\n\nexport interface VirtualizerItemOptions {\n  layoutInfo: LayoutInfo,\n  virtualizer: IVirtualizer,\n  ref: RefObject<HTMLElement>\n}\n\nexport function useVirtualizerItem(options: VirtualizerItemOptions) {\n  let {layoutInfo, virtualizer, ref} = options;\n\n  let updateSize = useCallback(() => {\n    let size = getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n\n  return {updateSize};\n}\n\nfunction getSize(node: HTMLElement) {\n  // Reset height before measuring so we get the intrinsic size\n  let height = node.style.height;\n  node.style.height = '';\n  let size = new Size(node.scrollWidth, node.scrollHeight);\n  node.style.height = height;\n  return size;\n}\n"],"names":[],"version":3,"file":"useVirtualizerItem.main.js.map"}