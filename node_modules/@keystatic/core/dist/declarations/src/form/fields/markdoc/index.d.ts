import { Node as MarkdocNode } from "../../../markdoc.js";
import { ContentFormField } from "../../api.js";
import type { EditorState } from 'prosemirror-state';
import { ContentComponent } from "../../../content-components.js";
import { MDXEditorOptions, MarkdocEditorOptions } from "./config.js";
export declare function markdoc({ label, description, options, components, extension, }: {
    label: string;
    description?: string;
    options?: MarkdocEditorOptions;
    extension?: 'mdoc' | 'md';
    components?: Record<string, ContentComponent>;
}): markdoc.Field;
export declare namespace markdoc {
    var createMarkdocConfig: typeof import("./markdoc-config.js").createMarkdocConfig;
}
export declare namespace markdoc {
    type Field = ContentFormField<EditorState, EditorState, {
        node: MarkdocNode;
    }>;
}
export declare function mdx({ label, description, options, components, extension, }: {
    label: string;
    description?: string;
    options?: MDXEditorOptions;
    extension?: 'mdx' | 'md';
    components?: Record<string, ContentComponent>;
}): mdx.Field;
export declare namespace mdx {
    type Field = ContentFormField<EditorState, EditorState, string>;
}
