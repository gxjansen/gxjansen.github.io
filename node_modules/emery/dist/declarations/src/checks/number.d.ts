import { UnaryPredicate } from "../types.js";
/** Checks whether a number is a finite */
export declare const isFinite: UnaryPredicate<number>;
/** Checks whether a number is a infinite */
export declare const isInfinite: (value: number) => boolean;
/** Checks whether a number is an integer */
export declare const isInteger: UnaryPredicate<number>;
/** Checks whether a number is a float */
export declare const isFloat: (value: number) => boolean;
/** Checks whether a number is even. */
export declare const isEven: (value: number) => boolean;
/** Checks whether a number is odd. */
export declare const isOdd: (value: number) => boolean;
/** Checks whether a number is negative zero */
export declare const isNegativeZero: (value: number) => boolean;
/** Checks whether a number is negative */
export declare const isNegative: (value: number) => boolean;
/** Checks whether a number is positive */
export declare const isPositive: (value: number) => boolean;
/** Checks whether a number is non-negative */
export declare const isNonNegative: (value: number) => boolean;
/** Checks whether a number is non-positive */
export declare const isNonPositive: (value: number) => boolean;
//# sourceMappingURL=number.d.ts.map