/// <reference lib="es2020.promise" />
// Primitives
// ------------------------------

/** Checks whether a value is a boolean */
function isBoolean(value) {
  return typeof value === 'boolean';
}
/** Checks whether a value is null */

function isNull(value) {
  return value === null;
}
/** Checks whether a value is a number */

function isNumber(value) {
  return typeof value === 'number' && !isNaN(value);
}
/** Checks whether a value is a string */

function isString(value) {
  return typeof value === 'string';
}
/** Checks whether a value is undefined */

function isUndefined(value) {
  return value === undefined;
} // Array
// ------------------------------

/** Checks whether or not an array is empty. */

function isNonEmptyArray(value) {
  return value.length > 0;
} // Convenience
// ------------------------------

/** Checks whether a value is null or undefined */

function isNullish(value) {
  return value === null || value === undefined;
}
/** Checks whether a value is defined */

function isDefined(value) {
  return !isNullish(value);
} // Promise
// ------------------------------

/**
 * Checks whether a result from `Promise.allSettled` is fulfilled
 *
 * ```ts
 * const results = await Promise.allSettled(promises);
 * const fulfilledValues = results.filter(isFulfilled).map(result => result.value);
 * ```
 */

function isFulfilled(result) {
  return result.status === 'fulfilled';
}
/**
 * Checks whether a result from `Promise.allSettled` is rejected
 *
 * ```ts
 * const results = await Promise.allSettled(promises);
 * const rejectionReasons = results.filter(isRejected).map(result => result.reason);
 * ```
 */

function isRejected(result) {
  return result.status === 'rejected';
}

export { isBoolean, isDefined, isFulfilled, isNonEmptyArray, isNull, isNullish, isNumber, isRejected, isString, isUndefined };
