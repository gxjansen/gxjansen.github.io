import type { DBSchema, IDBPDatabase } from 'idb';
import type { DataSourceAdapter } from 'y-provider';
export declare const dbVersion = 1;
export declare const DEFAULT_DB_NAME = "affine-local";
export declare function upgradeDB(db: IDBPDatabase<BlockSuiteBinaryDB>): void;
export interface IndexedDBProvider extends DataSourceAdapter {
    connect: () => void;
    disconnect: () => void;
    cleanup: () => Promise<void>;
    readonly connected: boolean;
}
export type UpdateMessage = {
    timestamp: number;
    update: Uint8Array;
};
export type WorkspacePersist = {
    id: string;
    updates: UpdateMessage[];
};
export type WorkspaceMilestone = {
    id: string;
    milestone: Record<string, Uint8Array>;
};
export interface BlockSuiteBinaryDB extends DBSchema {
    workspace: {
        key: string;
        value: WorkspacePersist;
    };
    milestone: {
        key: string;
        value: WorkspaceMilestone;
    };
}
export interface OldYjsDB extends DBSchema {
    updates: {
        key: number;
        value: Uint8Array;
    };
}
//# sourceMappingURL=shared.d.ts.map