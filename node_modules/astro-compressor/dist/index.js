import { fileURLToPath } from "node:url";
import { brotli, gzip } from "./compress.js";
import { Logger } from "./logger.js";
const defaultFileExtensions = [".css", ".js", ".html", ".xml", ".cjs", ".mjs", ".svg", ".txt"];
const defaultOptions = {
    gzip: true,
    brotli: true,
    fileExtensions: defaultFileExtensions,
};
// eslint-disable-next-line import/no-default-export
export default function (opts = defaultOptions) {
    const options = { ...defaultOptions, ...opts };
    return {
        name: "astro-compressor",
        hooks: {
            "astro:build:done": async ({ dir }) => {
                const path = fileURLToPath(dir);
                await Promise.allSettled([
                    gzip(path, options.fileExtensions, options.gzip),
                    brotli(path, options.fileExtensions, options.brotli),
                ]);
                Logger.success("Compression finished\n");
            },
        },
    };
}
//# sourceMappingURL=index.js.map