import { type ForwardedRef, type ReactElement } from 'react';
import { AriaTagGroupProps } from '@react-aria/tag';
import { type BaseStyleProps } from "../../dist/keystar-ui-style.js";
import { type FieldProps } from "../../dist/keystar-ui-field.js";
export interface TagGroupProps<T> extends Omit<AriaTagGroupProps<T>, 'defaultSelectedKeys' | 'disallowEmptySelection' | 'onSelectionChange' | 'selectedKeys' | 'selectionBehavior' | 'selectionMode'>, BaseStyleProps, FieldProps {
    /** The label to display on the action button.  */
    actionLabel?: string;
    /** Handler that is called when the action button is pressed. */
    onAction?: () => void;
    /** Sets what the TagGroup should render when there are no tags to display. */
    renderEmptyState?: () => ReactElement;
    /** Limit the number of rows initially shown. This will render a button that allows the user to expand to show all tags. */
    maxRows?: number;
}
/** Tags allow users to categorize content. They can represent keywords or people, and are grouped to describe an item or a search request. */
declare const _TagGroup: <T>(props: TagGroupProps<T> & {
    ref?: ForwardedRef<HTMLDivElement>;
}) => ReactElement;
export { _TagGroup as TagGroup };
