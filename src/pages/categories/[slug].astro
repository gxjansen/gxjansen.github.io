---
// utils
import { getCollection } from "astro:content";
import { slugify } from "@js/textUtils";

// components
import BaseLayout from "@layouts/BaseLayout.astro";
import PostCardAtlas from "@components/PostCard/PostCardAtlas.astro";
import Badge from "@components/Badge/Badge.astro";

// Get static paths for all categories
export async function getStaticPaths() {
  const posts = await getCollection("post", ({ data }) => {
    return !data.draft;
  });

  // Get all categories with their slugs
  const categoryMap = new Map();
  
  // Debug: Log all categories before processing
  console.log("All categories before processing:");
  posts.forEach(post => {
    console.log(`Post ${post.slug} categories:`, post.data.categories);
  });

  posts.forEach(post => {
    (post.data.categories || []).forEach(category => {
      if (category) {
        const slug = slugify(category).toLowerCase();
        console.log(`Category: "${category}" -> Slug: "${slug}"`);
        categoryMap.set(slug, category);
      }
    });
  });

  // Debug: Log final category map
  console.log("Final category map:");
  categoryMap.forEach((original, slug) => {
    console.log(`${slug} -> ${original}`);
  });

  const paths = Array.from(categoryMap.entries()).map(([slug, originalCategory]) => ({
    params: { slug },
    props: { originalCategory }
  }));

  // Debug: Log all generated paths
  console.log("Generated paths:", paths);

  return paths;
}

// Get original category name from props
const { originalCategory } = Astro.props;

// Get all posts for this category
const posts = await getCollection("post", ({ data }) => {
  const requestedSlug = Astro.params.slug.toLowerCase();
  return !data.draft && (data.categories || []).some(cat => 
    slugify(cat).toLowerCase() === requestedSlug
  );
});

// Sort by date (newest first)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
---

<BaseLayout 
  title={`${originalCategory} Articles`} 
  description={`Blog posts about ${originalCategory.toLowerCase()}`}
  transition:animate="slide"
>
  <section class="py-24 md:py-28">
    <div class="site-container">
      <div class="grid-pattern-container">
        <div class="relative">
          <div class="mx-auto mb-16 text-center md:max-w-4xl" data-aos="fade-up">
            <Badge>Category</Badge>
            <h2 class="h2 mb-4">{originalCategory}</h2>
            <p class="description text-lg md:text-xl">
              Articles about {originalCategory.toLowerCase()}
            </p>
          </div>

          <!-- Blog posts grid -->
          <div class="container mx-auto px-4">
            <div class="cards-grid">
              {sortedPosts.map(post => (
                <PostCardAtlas post={post} showDescription={true} />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>
