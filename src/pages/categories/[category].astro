---
// utils
import { getCollection } from "astro:content";
import { countItems, sortByValue } from "@js/blogUtils";
import { slugify, humanize } from "@js/textUtils";

export async function getStaticPaths() {
  // Get all posts
  const posts = await getCollection("blog", ({ data }) => {
    return !data.draft;
  });

  // Get all unique categories, filtering out undefined/null values
  const allCategories = [...new Set(posts
    .map(post => post.data.categories || [])
    .flat()
    .filter(Boolean))];
  
  // Create a path for each category
  return allCategories.map(category => ({
    params: { category: slugify(category) },
    props: { category }
  }));
}

// Get the category from props
const { category } = Astro.props;

// Get all posts
const posts = await getCollection("blog", ({ data }) => {
  return !data.draft;
});

// Filter posts by category, ensuring categories exist
const filteredPosts = posts.filter((post) =>
  (post.data.categories || [])
    .map((cat) => slugify(cat))
    .includes(slugify(category))
);

// Get all categories for sidebar, filtering out undefined/null values
const categories = posts
  .map((post) => post.data.categories || [])
  .flat()
  .filter(Boolean);
const processedCategories = sortByValue(countItems(categories));
---

<!-- Your template here -->
<div>
  <h1>Posts in category: {humanize(category)}</h1>
  {filteredPosts.map(post => (
    <article>
      <h2>{post.data.title}</h2>
      <p>{post.data.description}</p>
    </article>
  ))}
</div>
