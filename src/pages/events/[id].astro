---
// layout
import BaseLayout from "@layouts/BaseLayout.astro";

// components
import Badge from "@components/Badge/Badge.astro";
import RelatedPresentations from "@components/RelatedPresentations/RelatedPresentations.astro";
import EventCard from "@components/Events/EventCard.astro";

// utils
import { getAllEvents } from "@utils/eventUtils";
import { getEventById, getPresentationUrl } from "@utils/eventPresentationRelations";
import type { Event } from "@utils/eventUtils";

// Generate static paths for all events
export async function getStaticPaths() {
  const events = await getAllEvents();
  return events.map(event => {
    const presentationUrl = getPresentationUrl(event.id);
    return {
      params: { id: event.id },
      props: { event, presentationUrl },
    };
  });
}

// Get event data
const { event, presentationUrl } = Astro.props as { event: Event; presentationUrl?: string };

// Format date
const eventDate = new Date(event.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Metadata
const metaDescription = `${event.name} - ${eventDate} in ${event.city}${event.country ? `, ${event.country}` : ''}. ${event.topic ? `Topic: ${event.topic}` : ''}`;
---

<BaseLayout 
  title={`${event.name} | Events`}
  description={metaDescription}
>
  <section class="py-24 md:py-28">
    <div class="site-container">
      <div class="mx-auto max-w-4xl">
        <div class="mb-8" data-aos="fade-up">
          <Badge>Event</Badge>
          <h1 class="h2 mb-4 text-base-100 dark:text-base-900">{event.name}</h1>
          
          <div class="mb-6 flex flex-wrap gap-3">
            <span class="rounded-full bg-base-100 px-3 py-1 text-sm text-base-700 dark:bg-base-800 dark:text-base-300">
              {eventDate}
            </span>
            {event.workshop && (
              <span class="rounded-full bg-primary-100 px-3 py-1 text-sm text-primary-800 dark:bg-primary-900 dark:text-primary-200">
                Workshop
              </span>
            )}
          </div>

          <div class="flex items-start gap-6">
            <div>
              <p class="text-lg text-base-400 dark:text-base-500">
                {event.city}{event.country && `, ${event.country}`}
              </p>
              {event.role && (
                <p class="text-base text-base-500 dark:text-base-400 mt-1">
                  Role: {event.role}
                </p>
              )}
              {event.topic && (
                <p class="text-base text-base-500 dark:text-base-400 mt-1">
                  Topic: {event.topic}
                </p>
              )}
            </div>
            {event.icon && (
              <div class="w-24 h-24">
                <img 
                  src={`@images/events/${event.icon}`}
                  alt={`${event.name} logo`}
                  class="w-full h-full object-contain"
                  loading="lazy"
                />
              </div>
            )}
          </div>
        </div>

        {event.url && (
          <div class="mb-12">
            <a 
              href={event.url}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-block px-6 py-3 bg-primary-600 hover:bg-primary-700 text-base-100 dark:text-base-900 rounded-lg transition-colors"
            >
              Visit Event Website
            </a>
          </div>
        )}

        <RelatedPresentations eventId={event.id} />
      </div>
    </div>
  </section>
</BaseLayout>
