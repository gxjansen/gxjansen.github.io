---
import { formatDate, getFaviconUrl } from '@utils/pressUtils';
import type { PressCoverage } from '@types/press';

interface Props {
  articles: PressCoverage[];
}

const { articles } = Astro.props;
---

<section 
  id="articles" 
  class="mb-16"
  aria-labelledby="articles-heading"
>
  <h2 
    id="articles-heading" 
    class="h2 mb-4"
  >
    Articles & Interviews
  </h2>
  <div 
    class="cards-grid"
    role="list"
    aria-label="List of articles and interviews"
  >
    {articles.map(article => {
      const domain = article.articleUrl ? new URL(article.articleUrl).hostname : '';
      const formattedDate = formatDate(article.publicationDate);
      const articleId = `article-${article.articleUrl ? new URL(article.articleUrl).pathname.replace(/\W/g, '-') : crypto.randomUUID()}`;
      
      return (
        <article 
          class="article-card"
          role="listitem"
          aria-labelledby={articleId}
        >
          <div class="card-content">
            <h3 
              id={articleId}
              class="card-title"
            >
              <div class="flex items-start gap-2">
                {article.articleUrl && (
                  <img 
                    src={getFaviconUrl(article.articleUrl)} 
                    alt=""
                    width="16" 
                    height="16"
                    class="w-4 h-4 object-contain flex-shrink-0 mt-1"
                    role="presentation"
                  />
                )}
                <span class="line-clamp-2 flex-1">{article.title}</span>
              </div>
            </h3>
            <div 
              class="card-meta"
              aria-label="Article details"
            >
              <time datetime={new Date(article.publicationDate).toISOString()}>
                <span class="sr-only">Published on </span>
                {formattedDate}
              </time>
              {article.personOrganization && (
                <>
                  <span aria-hidden="true">•</span>
                  <span>
                    <span class="sr-only">Written by </span>
                    {article.personOrganization}
                  </span>
                </>
              )}
              {domain && (
                <>
                  <span aria-hidden="true">•</span>
                  <span>
                    <span class="sr-only">Published on </span>
                    {domain}
                  </span>
                </>
              )}
            </div>
            {article.articleUrl && (
              <a 
                href={article.articleUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                aria-label={`View article about ${article.title} (opens in new tab)`}
              >
                View article <span aria-hidden="true">→</span>
              </a>
            )}
          </div>
        </article>
      );
    })}
  </div>
</section>
