---
import { formatDate, getFaviconUrl } from '@utils/pressUtils';
import type { PressCoverage } from '@types/press';

interface Props {
  articles: PressCoverage[];
}

const { articles } = Astro.props;
---

<section 
  id="articles" 
  class="mb-16"
  aria-labelledby="articles-heading"
>
  <h2 
    id="articles-heading" 
    class="h2 mb-4"
  >
    Articles & Interviews
  </h2>
  <div 
    class="space-y-4"
    role="list"
    aria-label="List of articles and interviews"
  >
    {articles.map(article => {
      const domain = article.articleUrl ? new URL(article.articleUrl).hostname : '';
      const formattedDate = formatDate(article.publicationDate);
      const articleId = `article-${article.articleUrl ? new URL(article.articleUrl).pathname.replace(/\W/g, '-') : crypto.randomUUID()}`;
      
      return (
        <article 
          class="bg-neutral-100 dark:bg-white/[.075] rounded-xl p-6"
          role="listitem"
          aria-labelledby={articleId}
        >
          <div class="flex items-start gap-3">
            {article.articleUrl && (
              <div 
                class="flex-shrink-0 mt-1"
                aria-hidden="true"
              >
                <img 
                  src={getFaviconUrl(article.articleUrl)} 
                  alt=""
                  width="16" 
                  height="16"
                  class="w-4 h-4 object-contain"
                  role="presentation"
                />
              </div>
            )}
            <div class="flex-1 min-w-0">
              <h3 
                id={articleId}
                class="h3 mb-0"
              >
                <a 
                  href={article.articleUrl} 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  class="text-teal-500 hover:text-teal-600 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:ring-offset-2 rounded inline-flex items-center gap-1"
                  aria-label={`${article.title} (opens in new tab)`}
                >
                  <span class="truncate">{article.title}</span>
                  <span 
                    class="text-teal-400 dark:text-teal-500" 
                    aria-hidden="true"
                  >
                    →
                  </span>
                </a>
              </h3>
              <div 
                class="mt-4 flex flex-wrap gap-x-2 text-sm text-neutral-600 dark:text-neutral-400"
                aria-label="Article details"
              >
                <time datetime={new Date(article.publicationDate).toISOString()}>
                  <span class="sr-only">Published on </span>
                  {formattedDate}
                </time>
                {article.personOrganization && (
                  <>
                    <span aria-hidden="true">•</span>
                    <span>
                      <span class="sr-only">Written by </span>
                      {article.personOrganization}
                    </span>
                  </>
                )}
                {domain && (
                  <>
                    <span aria-hidden="true">•</span>
                    <span>
                      <span class="sr-only">Published on </span>
                      {domain}
                    </span>
                  </>
                )}
              </div>
            </div>
          </div>
        </article>
      );
    })}
  </div>
</section>
