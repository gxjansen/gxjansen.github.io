---
/**
 * Dynamic country flags marquee based on events data
 * Flags are fetched from svg-country-flags package during build
 */

import Badge from "@components/Badge/Badge.astro";
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import eventsData from "../../data/events.json";
import { getAllFlags } from "../../utils/flagUtils";

// Define interfaces for our marquee data structures
interface MarqueeRow {
  images: ImageMetadata[];
}

// Get unique countries from events
const uniqueCountries = [...new Set(eventsData.map(event => event.country))].filter(Boolean);

// Load all flags during build
const allFlags = await getAllFlags(uniqueCountries);

// Split flags into three roughly equal groups
const totalFlags = allFlags.length;
const flagsPerRow = Math.ceil(totalFlags / 3);

// Create properly typed marquee row objects
const marqueeTop: MarqueeRow = {
  images: allFlags.slice(0, flagsPerRow)
};

const marqueeMiddle: MarqueeRow = {
  images: allFlags.slice(flagsPerRow, flagsPerRow * 2)
};

const marqueeBottom: MarqueeRow = {
  images: allFlags.slice(flagsPerRow * 2)
};

// Helper function to validate image data
const isValidImage = (image: ImageMetadata): boolean => {
  return Boolean(image && image.src && image.width && image.height);
};
---

<section
  id="feature-gallery-marquee"
  class="bg-[url('/assets/pattern-light-big.svg')] bg-center bg-no-repeat py-24 dark:bg-[url('/assets/pattern-dark-big.svg')] md:py-28"
>
  <!-- Header section -->
  <div class="site-container flex justify-center">
    <div class="mx-auto mb-16 text-center md:max-w-4xl" data-aos="fade-up">
      <Badge>Flags</Badge>
      <h2 class="h2">Countries where I presented</h2>
      <p class="description mt-4 text-pretty text-lg md:text-xl">
        {uniqueCountries.length} and counting!
      </p>
    </div>
  </div>

  <!-- Marquee container -->
  <div class="relative flex flex-col gap-3 overflow-hidden md:gap-5">
    {/* Top row */}
    <div class="marquee-top relative flex gap-3 overflow-hidden md:gap-5">
      <div class="flex min-w-full shrink-0 animate-marquee items-center justify-around gap-3 md:gap-5">
        {marqueeTop.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
      <!-- Duplicate for infinite scroll -->
      <div
        aria-hidden="true"
        class="flex min-w-full shrink-0 animate-marquee items-center justify-around gap-3 md:gap-5"
      >
        {marqueeTop.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
    </div>

    {/* marquee middle row */}
    <div class="marquee-top relative flex gap-3 overflow-hidden md:gap-5">
      <div class="flex min-w-full shrink-0 animate-marquee items-center justify-around [animation-direction:reverse] gap-3 md:gap-5">
        {marqueeMiddle.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
      <!-- Duplicate for infinite scroll -->
      <div
        aria-hidden="true"
        class="flex min-w-full shrink-0 animate-marquee items-center justify-around [animation-direction:reverse] gap-3 md:gap-5"
      >
        {marqueeMiddle.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
    </div>

    {/* marquee bottom row */}
    <div class="marquee-top relative flex gap-3 overflow-hidden md:gap-5">
      <div class="flex min-w-full shrink-0 animate-marquee items-center justify-around gap-3 md:gap-5">
        {marqueeBottom.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
      <!-- Duplicate for infinite scroll -->
      <div
        aria-hidden="true"
        class="flex min-w-full shrink-0 animate-marquee items-center justify-around gap-3 md:gap-5"
      >
        {marqueeBottom.images.filter(isValidImage).map((image) => (
          <div class="relative w-[clamp(3rem,28vmin,5rem)] overflow-hidden">
            <div class="absolute inset-0 rounded-md shadow-md" style="box-shadow: 0 0 0 1px rgba(255,255,255,0.1) inset;"></div>
            <Image
              src={image.src}
              width={image.width}
              height={image.height}
              alt="Country flag"
              class="w-full rounded-md"
              style={{
                aspectRatio: '3/2',
                objectFit: 'cover',
                objectPosition: 'center'
              }}
            />
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  const setupMarquee = () => {
    const marqueeTop = document.querySelector(".marquee-top");
    const marqueeMiddle = document.querySelector(".marquee-middle");
    const marqueeBottom = document.querySelector(".marquee-bottom");

    // add the clauss "pause" when the mouse enters the marquee
    marqueeTop?.addEventListener("mouseover", () => {
      marqueeTop.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.add("pause");
      });
    });
    marqueeMiddle?.addEventListener("mouseover", () => {
      marqueeMiddle.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.add("pause");
      });
    });
    marqueeBottom?.addEventListener("mouseover", () => {
      marqueeBottom.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.add("pause");
      });
    });

    // remove the class "pause" when the mouse leaves the marquee
    marqueeTop?.addEventListener("mouseout", () => {
      marqueeTop.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.remove("pause");
      });
    });
    marqueeMiddle?.addEventListener("mouseout", () => {
      marqueeMiddle.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.remove("pause");
      });
    });
    marqueeBottom?.addEventListener("mouseout", () => {
      marqueeBottom.querySelectorAll(".animate-marquee").forEach((el) => {
        el.classList.remove("pause");
      });
    });
  };

  // runs on initial page load
  setupMarquee();

  // runs on view transitions navigation
  document.addEventListener("astro:after-swap", setupMarquee);
</script>
