---
import type { PodcastEpisode } from "../../types/podcast";

interface Props {
  episode: PodcastEpisode;
}

const { episode } = Astro.props;

// Format the date
const formattedDate = new Date(episode.pubDate).toLocaleDateString("en-US", {
  month: "short",
  day: "numeric",
  year: "numeric"
});

// Truncate description to a reasonable length
const truncatedDescription = episode.description.length > 150 
  ? `${episode.description.slice(0, 150)}...` 
  : episode.description;

// Define classes for the card
const cardClasses = "block bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-2 border-teal-400/30 hover:border-teal-400 hover:shadow-xl hover:-translate-y-1 cursor-pointer group transition-all duration-200";
---

<a
  href={episode.link}
  target="_blank"
  rel="noopener noreferrer"
  class={cardClasses}
>
  <div class="flex items-start gap-4">
    {/* Podcast Image */}
    <div class="flex-shrink-0">
      {episode.imageUrl ? (
        <img
          src={episode.imageUrl}
          alt={`${episode.podcastName} Cover`}
          width={80}
          height={80}
          class="rounded-lg object-cover"
        />
      ) : (
        <div class="w-20 h-20 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center">
          <span class="text-2xl">üéôÔ∏è</span>
        </div>
      )}
    </div>

    {/* Episode Details */}
    <div class="flex-1 min-w-0">
      {/* Podcast Name and Date */}
      <div class="flex items-center justify-between mb-1">
        <span class="text-sm font-medium text-teal-600 dark:text-teal-400">
          {episode.podcastName}
        </span>
        <span class="text-sm text-gray-500 dark:text-gray-400">
          {formattedDate}
        </span>
      </div>

      {/* Episode Title */}
      <h3 class="text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2 group-hover:text-blue-700 dark:group-hover:text-blue-300 transition-colors duration-200">
        {episode.title}
      </h3>

      {/* Description */}
      <p class="text-gray-600 dark:text-gray-300 text-sm mb-3">
        {truncatedDescription}
      </p>

      {/* Duration and Listen Button */}
      <div class="flex items-center justify-between">
        <span class="text-sm text-gray-500 dark:text-gray-400">
          {episode.duration}
        </span>
        <span class="inline-flex items-center gap-1 text-sm text-teal-600 dark:text-teal-400 group-hover:translate-x-1 transition-transform duration-200">
          Listen Now
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="h-4 w-4" 
            viewBox="0 0 20 20" 
            fill="currentColor"
          >
            <path 
              fill-rule="evenodd" 
              d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" 
              clip-rule="evenodd" 
            />
          </svg>
        </span>
      </div>
    </div>
  </div>
</a>
