---
import { getRelativeLocaleUrl } from "astro:i18n";
import { Icon } from "astro-icon";

// utils
import { getLocaleFromUrl } from "@js/localeUtils";

// data
import { type navLinkItem } from "@config/types/configDataTypes";

interface Props {
  navItem: navLinkItem;
  class?: string;
  noIcon?: boolean;
}

const { navItem, class: className, noIcon = false } = Astro.props as Props;
const { text, link, newTab = false, icon } = navItem;

const currLocale = getLocaleFromUrl(Astro.url);

const domain = import.meta.env.SITE;
let actualLink: string;
if (!link.includes(domain) && !link.startsWith("/") && !link.startsWith("#")) {
  actualLink = link;
} else {
  actualLink = getRelativeLocaleUrl(currLocale, link);
}

const isCurrentPage = Astro.url.pathname === actualLink;
---

<li role="none">
  <a
    class:list={[
      `primary-focus relative block flex w-full items-center gap-1.5 rounded-md px-4 py-2 font-medium leading-tight text-base-500 transition hover:text-base-600 dark:text-base-400 dark:hover:text-base-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${className}`,
      {
        "aria-current": isCurrentPage,
        "font-semibold text-primary-600 dark:text-primary-400": isCurrentPage,
      },
    ]}
    href={actualLink}
    target={newTab ? "_blank" : undefined}
    rel={newTab ? "noopener noreferrer" : undefined}
    aria-current={isCurrentPage ? "page" : undefined}
    role="menuitem"
  >
    {
      icon && !noIcon && (
        <Icon
          name={icon}
          aria-hidden="true"
          role="presentation"
          class="mt-0.5 size-5 self-start md:size-4"
        />
      )
    }
    <span>{text}</span>
    {newTab && (
      <span class="sr-only">(opens in new tab)</span>
    )}
  </a>
</li>

<style>
  /* High contrast mode enhancements */
  @media (forced-colors: active) {
    a[aria-current="page"] {
      border: 2px solid currentColor;
    }
  }

  /* Focus styles */
  .primary-focus:focus-visible {
    outline: 2px solid var(--focus-ring-color, theme('colors.primary.500'));
    outline-offset: 2px;
  }
</style>
