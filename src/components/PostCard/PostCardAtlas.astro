---
import { type CollectionEntry, getEntries } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon";

// components
import Category from "@components/Category/Category.astro";

// utils
import { slugify, formatDate, humanize } from "@js/textUtils";
import { getLocaleFromUrl } from "@js/localeUtils";

interface Props {
  post: CollectionEntry<"post">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;
const { title, description, categories = [], authors = [], pubDate, heroImage } =
  post.data;

const currLocale = getLocaleFromUrl(Astro.url);
const authorsData = authors && authors.length > 0 ? await getEntries(authors.map(author => ({ collection: 'authors', id: author }))) : [];
---

<article class=`${className}` {...rest}>
  <a
    href={`/post/${post.slug}/`}
    class="block aspect-[16/9] overflow-hidden rounded-xl"
  >
    {heroImage && (
      <Image
        src={heroImage}
        alt={`Cover for ${title}`}
        width={800}
        height={450}
        class="h-full w-full object-cover transition-transform duration-500 hover:scale-105"
        transition:name={`heroImage-${post.slug}`}
      />
    )}
  </a>
  <div>
    <!-- categories -->
    <div class="mt-6 flex flex-wrap gap-4">
      {categories.map((category) => <Category category={category} />)}
    </div>

    <div
      class="mt-3 flex flex-wrap gap-1 text-sm font-medium text-base-500 dark:text-base-400"
    >
      <!-- first author -->
      {authorsData.length > 0 && (
        <>
          <p class="whitespace-nowrap">
            {authorsData[0].data.name}
          </p>
          <span>&bull;</span>
        </>
      )}

      <!-- published date -->
      <p class="whitespace-nowrap">
        {formatDate(pubDate, currLocale)}
      </p>
    </div>

    <!-- title -->
    <div class="mt-2">
      <a
        href={`/post/${post.slug}/`}
        class="decoration-primary-500 hover:underline"
      >
        <h2 class="text-xl font-bold dark:text-base-100 md:text-2xl">
          {title}
        </h2>
      </a>
    </div>

    <!-- description -->
    {
      showDescription && description && (
        <p class="mt-2 text-base font-medium text-base-400 dark:text-base-500">
          {description}
        </p>
      )
    }

    <!-- read post button -->
    <div class="mt-4">
      <a
        href={`/post/${post.slug}/`}
        class="flex items-center gap-1 font-semibold text-primary-500 transition-colors hover:text-primary-600"
      >
        Read Post
        <Icon name="tabler/arrow-narrow-right" class="size-4" />
      </a>
    </div>
  </div>
</article>
