---
import { type CollectionEntry, getEntries } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon";

// components
import Category from "@components/Category/Category.astro";

// utils
import { slugify, formatDate, humanize } from "@js/textUtils";
import { getLocaleFromUrl } from "@js/localeUtils";

interface Props {
  post: CollectionEntry<"post">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;
const { title, description, categories = [], authors = [], pubDate, heroImage } =
  post.data;

const currLocale = getLocaleFromUrl(Astro.url);
const authorsData = authors && authors.length > 0 ? await getEntries(authors.map(author => ({ collection: 'authors', id: author }))) : [];
---

<article class=`post-card group ${className}` {...rest}>
  <a href={`/post/${post.slug}/`} class="card-container">
    {heroImage && (
      <Image
        src={heroImage}
        alt={`Cover for ${title}`}
        width={800}
        height={450}
        class="card-image"
        transition:name={`heroImage-${post.slug}`}
      />
    )}
  </a>
  <div>
    <!-- categories -->
    <div class="card-categories">
      {categories.map((category) => <Category category={category} />)}
    </div>

    <!-- author and date -->
    <div class="card-author-date">
      {authorsData.length > 0 && (
        <>
          <p class="whitespace-nowrap">
            {authorsData[0].data.name}
          </p>
          <span>&bull;</span>
        </>
      )}
      <p class="whitespace-nowrap">
        {formatDate(pubDate, currLocale)}
      </p>
    </div>

    <!-- title -->
    <div class="mt-2">
      <a href={`/post/${post.slug}/`} class="decoration-primary-500 hover:underline">
        <h2 class="card-title group-hover:text-primary-500 dark:group-hover:text-primary-400">
          {title}
        </h2>
      </a>
    </div>

    <!-- description -->
    {showDescription && description && (
      <p class="card-description">
        {description}
      </p>
    )}

    <!-- read post button -->
    <div class="mt-4">
      <a href={`/post/${post.slug}/`} class="card-read-button">
        Read Post
        <Icon name="tabler/arrow-narrow-right" class="size-4" />
      </a>
    </div>
  </div>
</article>
