---
/**
 * * These are larger cards with icons, titles, and text
 * Recommend using minimum 3 cards in a row, although this should work for any number of cards
 * These smaller cards work great if there are a large amount of services to advertise
 *
 * ! If you can an error for an icon like "Error: Not Found: "calendar-check" in pack "tabler",
 * ! You can copy to actual SVG into src/icons, name it whatever, and use similar to below example "tabler/calendar-check"
 */

import { Icon } from "astro-icon";

// components
import ContentCard from "@components/SiteContent/ContentCard.astro";
import Badge from "@components/Badge/Badge.astro";
// import FeatureCard from "@components/FeatureCard/FeatureCardTest.astro";

interface FeatureData {
  icon: string;
  title: string;
  text: string;
  href: string;
}

// data
const featureData: FeatureData[] = [
  {
    icon: "tabler/outline/broadcast",
    title: "Podcasts",
    text: `Podcasting is a great way to learn, share and get to know people. I've published over 250 episodes for different podcasts.`,
    href: "/podcasts",
  },
  {
    icon: "tabler/outline/calendar-event",
    title: "Events",
    text: `I've had the privilege of speaking at a number of wonderful industry conferences and universities around the world, sharing my experience with the audience and sharing ideas with a lot of experts.`,
    href: "/events",
  },
  {
    icon: "tabler/outline/article",
    title: "Articles",
    text: `I provide actionable tips on improving your online business and boosting conversion rates.`,
    href: "/post",
  },
  {
    icon: "tabler/outline/friends",
    title: "Presentations",
    text: `Overview of public presentations with decks and videos (when available).`,
    href: "/presentations",
  },
  {
    icon: "tabler/outline/code",
    title: "Projects",
    text: `Some of my IndieHacker projects. Use at your own risk ðŸ˜‰`,
    href: "/projects",
  },
];
---

<section id="services-icon" class="py-24 md:py-28">
  <div class="site-container">
    <div class="relative">
      <div class="relative">
        <div class="mx-auto mb-16 text-center md:max-w-4xl" data-aos="fade-up">
          <Badge>Content</Badge>
          <h2 class="h2 mb-4">What can you find here?</h2>
          <!-- <p class="description text-lg md:text-xl">
            Podcasting is a great way to learn, share and get to know people. I've published over 250 episodes for different podcasts:
          </p> -->
        </div>
        <div 
          class="scroll-container-wrapper"
          id="services-icon-cards"
        >
          <span class="sr-only" role="status" aria-live="polite">
            Scroll horizontally to see more content
          </span>
          <div
            class="scroll-container"
            role="region"
            aria-label="Scrollable content"
            tabindex="0"
          >
            {
              featureData.map((feature, idx) => (
                <div class="scroll-item">
                  <ContentCard
                    title={feature.title}
                    text={feature.text}
                    icon={feature.icon}
                    href={feature.href}
                    idx={idx}
                    data-aos="zoom-in"
                    data-aos-delay={0.15 * idx}
                    data-aos-trigger="#services-icon-cards"
                  />
                </div>
              ))
            }
          </div>
        </div>

        <script>
          // Handle scroll gradient visibility
          const wrapper = document.querySelector('.scroll-container-wrapper');
          const container = wrapper?.querySelector('.scroll-container');

          if (wrapper && container) {
            const checkScroll = () => {
              const isAtEnd = container.scrollLeft + container.clientWidth >= container.scrollWidth - 10;
              wrapper.setAttribute('data-at-end', isAtEnd.toString());
            };

            container.addEventListener('scroll', checkScroll);
            window.addEventListener('resize', checkScroll);
            checkScroll(); // Initial check
          }
        </script>
      </div>
    </div>
  </div>
</section>
