---
import { type CollectionEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";

// component imports
import Seo from "@components/Seo/Seo.astro";
import PassiveEvents from "@components/Scripts/PassiveEvents.astro";

// data
import siteSettings from "@config/siteSettings.json";
import { CONFIG } from '../config';  // Use .env for indexing

export interface Props {
  type?: "blog" | "general" | undefined;
  title: string;
  description: string;
  image?: ImageMetadata;
  postFrontmatter?: CollectionEntry<"post">["data"];
  authors?: CollectionEntry<"authors">[];
  noindex?: boolean;
}

const {
  type = "general",
  title,
  description,
  image,
  authors,
  postFrontmatter,
} = Astro.props as Props;
// Use the environment variable to determine noindex
const noindex = !CONFIG.ALLOW_INDEXING;
---

<meta charset="utf-8" />
<!-- Content Security Policy -->
<meta http-equiv="Content-Security-Policy" content="
  default-src 'self';
  script-src 'self' 'unsafe-inline';
  style-src 'self' 'unsafe-inline';
  img-src 'self' data: https:;
  font-src 'self';
  connect-src 'self';
  media-src 'self';
  frame-src https://www.youtube.com/embed/ https://open.spotify.com/embed/;
  object-src 'none';
  base-uri 'self';
  form-action 'self';
  frame-ancestors 'none';
  upgrade-insecure-requests;
" />

<meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
<meta name="color-scheme" content="dark light" />
<meta name="theme-color" media="(prefers-color-scheme: light)" content="#ffffff" />
<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#0f172a" />

<!-- Accessibility meta tags -->
<meta name="format-detection" content="telephone=no" />
<meta name="format-detection" content="date=no" />
<meta name="format-detection" content="address=no" />
<meta name="format-detection" content="email=no" />

<!-- Font loading optimization -->
<style is:inline>
  /* Inline critical font CSS */
  @font-face {
    font-family: 'Poppins';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url('/fonts/poppins/poppins-400.woff2') format('woff2');
  }
  @font-face {
    font-family: 'Poppins';
    font-style: normal;
    font-weight: 500;
    font-display: swap;
    src: url('/fonts/poppins/poppins-500.woff2') format('woff2');
  }
  @font-face {
    font-family: 'Poppins';
    font-style: normal;
    font-weight: 600;
    font-display: swap;
    src: url('/fonts/poppins/poppins-600.woff2') format('woff2');
  }
  @font-face {
    font-family: 'Poppins';
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url('/fonts/poppins/poppins-700.woff2') format('woff2');
  }
</style>

<!-- Preload critical font weights -->
<link 
  rel="preload" 
  href="/fonts/poppins/poppins-400.woff2" 
  as="font" 
  type="font/woff2" 
  crossorigin
/>
<link 
  rel="preload" 
  href="/fonts/poppins/poppins-500.woff2" 
  as="font" 
  type="font/woff2" 
  crossorigin
/>

<!-- Favicons. I store these in public/favicons. Wherever you store them in the public folder is what you need these href's to match -->
<link rel="icon" href="/favicons/favicon.ico" />
<!-- Below is generated from https://realfavicongenerator.net/ -->
<link
  rel="apple-touch-icon"
  sizes="180x180"
  href="/favicons/apple-touch-icon.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="32x32"
  href="/favicons/favicon-32x32.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="16x16"
  href="/favicons/favicon-16x16.png"
/>
<link rel="manifest" href="/favicons/site.webmanifest" />
<link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="{/* Replaced {/* Replaced {/* Replaced #22c55e */} text-primary-500 */} text-primary-500 */} text-primary-500" />
<link rel="shortcut icon" href="/favicons/favicon.ico" />
<meta name="msapplication-TileColor" content="{/* Replaced {/* Replaced {/* Replaced #ffffff */} text-base-100 dark:text-base-900 */} text-base-100 dark:text-base-900 */} text-base-100 dark:text-base-900" />
<meta name="msapplication-config" content="/favicons/browserconfig.xml" />
<meta name="theme-color" content="{/* Replaced {/* Replaced {/* Replaced #22c55e */} text-primary-500 */} text-primary-500 */} text-primary-500" />
<!-- end favicons -->

<!-- other -->
<meta name="generator" content={Astro.generator} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Performance optimizations -->
<PassiveEvents />

<!-- Theme change setup. Run early to eliminate Flash of inAccurate coloR Theme (FART) -->
<script is:inline>
  function initTheme() {
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');
    let colorTheme = localStorage.getItem("colorTheme");
    
    function applyTheme(theme) {
      if (theme === "dark") {
        document.documentElement.classList.add("dark");
        document.documentElement.style.colorScheme = "dark";
      } else {
        document.documentElement.classList.remove("dark");
        document.documentElement.style.colorScheme = "light";
      }
    }

    // Initial theme setup
    if (!colorTheme) {
      colorTheme = prefersDark.matches ? "dark" : "light";
      localStorage.setItem("colorTheme", colorTheme);
    }
    applyTheme(colorTheme);

    // Listen for system theme changes
    prefersDark.addEventListener("change", (e) => {
      if (!localStorage.getItem("colorTheme")) {
        const newTheme = e.matches ? "dark" : "light";
        applyTheme(newTheme);
        localStorage.setItem("colorTheme", newTheme);
      }
    });
  }

  // runs on initial page load
  initTheme();

  // runs on view transitions navigation
  document.addEventListener("astro:after-swap", initTheme);
</script>

<Seo
  type={type}
  title={title}
  description={description}
  image={image}
  authors={authors}
  postFrontmatter={postFrontmatter}
  noindex={noindex}
/>

<!-- no fallback as I saw issues with firefox fallback -->
{siteSettings.useViewTransitions && <ViewTransitions fallback="none" />}
